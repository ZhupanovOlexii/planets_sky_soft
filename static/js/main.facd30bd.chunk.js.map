{"version":3,"sources":["components/PlanetCard/PlanetCard.tsx","components/PlanetList/PlanetList.tsx","components/Navigation/Navigation.tsx","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["PlanetCard","planet","useState","info","setInfo","className","name","id","equatorialRadius","value","unit","surfaceGravity","moons","count","type","onClick","description","PlanetList","planets","map","key","Navigation","to","Header","App","query","setQuery","history","useHistory","location","useLocation","searchParams","URLSearchParams","search","sortBy","useMemo","get","sortOrder","filteredPlanets","filter","atmosphericConstituents","list","toLowerCase","includes","trim","sort","a","b","localeCompare","reverse","placeholder","onChange","event","target","sortField","set","push","toString","sortingBy","ReactDOM","render","document","getElementById"],"mappings":"qsKAuGeA,G,MAhGqB,SAAC,GAAgB,IAAD,EAAbC,EAAa,EAAbA,OAAa,EAC1BC,mBAAS,IADiB,mBAC3CC,EAD2C,KACrCC,EADqC,KAWlD,OACE,oCACE,yBAAKC,UAAU,oBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,2BACb,uBAAGA,UAAU,qBAAb,OAEG,KAEH,uBAAGA,UAAU,qBACVJ,EAAOK,OAIZ,yBAAKD,UAAU,2BACb,uBAAGA,UAAU,qBAAb,KAEG,KAEH,uBAAGA,UAAU,qBACVJ,EAAOM,KAIZ,yBAAKF,UAAU,2BACb,uBAAGA,UAAU,qBAAb,SAEG,KAGH,uBAAGA,UAAU,qBACVJ,EAAOO,iBAAiBC,MACxBR,EAAOO,iBAAiBE,OAG7B,yBAAKL,UAAU,2BACb,uBAAGA,UAAU,qBAAb,UAEG,KAEH,uBAAGA,UAAU,qBACVJ,EAAOU,eAAeF,MACtBR,EAAOU,eAAeD,OAG3B,yBAAKL,UAAU,2BACb,uBAAGA,UAAU,qBAAb,QAEG,KAEH,uBAAGA,UAAU,qBAAb,UACGJ,EAAOW,aADV,aACG,EAAcC,SAKrB,yBAAKR,UAAU,kCACb,4BACEA,UAAU,4BACVS,KAAK,SACLC,QAAS,WAnEjBX,EAmEqCH,EAnEfe,eAgEhB,cASDb,GACC,yBAAKE,UAAU,uBACb,uBAAGA,UAAU,oBAAoBF,GACjC,yBAAKE,UAAU,kCACb,4BACES,KAAK,SACLT,UAAU,6BACVU,QA7EY,WACxBX,EAAQ,MAyEE,eChECa,EAjBqB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrC,OACE,oCACE,yBAAKb,UAAU,cACZa,EAAQC,KAAI,SAAAlB,GAAM,OACjB,yBAAKmB,IAAKnB,EAAOM,IACf,kBAAC,EAAD,CAAYN,OAAQA,WCWjBoB,G,kBApBI,WACjB,OACE,oCACE,yBAAKhB,UAAU,cACb,wBAAIA,UAAU,oBACZ,kBAAC,IAAD,CAAMiB,GAAG,QAAQjB,UAAU,qBACzB,uBAAGA,UAAU,oBAAb,SAEF,kBAAC,IAAD,CAAMiB,GAAG,SAASjB,UAAU,oBAC1B,uBAAGA,UAAU,oBAAb,aAEF,kBAAC,IAAD,CAAMiB,GAAG,YAAYjB,UAAU,oBAC7B,uBAAGA,UAAU,oBAAb,qBCGGkB,EAfA,WACb,OACE,oCACE,yBAAKlB,UAAU,UACb,uBAAGA,UAAU,gBAAb,SACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,gBACb,0CC+FKmB,EAnGH,WAAO,IAAD,EACUtB,mBAAS,IADnB,mBACTuB,EADS,KACFC,EADE,KAEVC,EAAUC,cACVC,EAAWC,cACXC,EAAe,IAAIC,gBAAgBH,EAASI,QAC5CC,EAASC,mBAAQ,kBAAMJ,EAAaK,IAAI,WAAa,KAAI,CAACL,IAC1DM,EAAYF,mBAAQ,kBAAMJ,EAAaK,IAAI,cAAgB,KAAI,CAACL,IAUhEO,EAAkBH,mBAAQ,kBAAMjB,EAAQqB,QAAO,SAAAtC,GACnD,OAAQA,EAAOK,KAAOL,EAAOuC,wBAAwBC,KAAOxC,EAAOM,IAChEmC,cAAcC,SAASlB,EAAMmB,OAAOF,oBACrC,CAACjB,IA+CL,OAhCAU,mBAAQ,WACN,OAAQE,GACN,IAAK,MACH,OAAQH,GACN,IAAK,OACHI,EACGO,MAAK,SAACC,EAAWC,GAAZ,OAA0BA,EAAEzC,KAAK0C,cAAcF,EAAExC,SACzD,MAEF,IAAK,mBACHgC,EACGO,MAAK,SAACC,EAAWC,GAAZ,OAA0BA,EAAEvC,iBAAiBC,MAAQqC,EAAEtC,iBAAiBC,SAChF,MAEF,IAAK,QACH6B,EACGO,MAAK,SAACC,EAAWC,GAAZ,OAA0BA,EAAEnC,MAAMC,MAAQiC,EAAElC,MAAMC,SAC1D,MAEF,QAASyB,EACNO,MAAK,SAACC,EAAWC,GAAZ,OAA0BA,EAAEzC,KAAK0C,cAAcF,EAAExC,SAG3D,MACF,IAAK,OACHgC,EAAgBW,UAChB,MACF,QAASX,EACNO,MAAK,SAACC,EAAWC,GAAZ,OAA0BD,EAAExC,KAAK0C,cAAcD,EAAEzC,YAE1D,CAACgC,EAAiBJ,EAAQG,IAG3B,yBAAKhC,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,WAEb,yBAAKA,UAAU,SACb,2BACES,KAAK,YACLT,UAAU,eACV6C,YAAY,kBACZC,SAlEU,SAACC,GACnB,IAAMC,EAASD,EAAMC,OAAO5C,MAE5BiB,EAAS2B,OAmEL,yBAAKhD,UAAU,iBAxEA,CAAC,OAAQ,mBAAoB,SAyE5Bc,KAAI,SAAAmC,GAAS,OACzB,4BACElC,IAAKkC,EACLxC,KAAK,SACLT,UAAU,sBACVU,QAAS,kBAjEH,SAACuC,GACbpB,IAAWoB,GAA2B,QAAdjB,EAC1BN,EAAawB,IAAI,YAAa,QAE9BxB,EAAawB,IAAI,YAAa,OAGhCxB,EAAawB,IAAI,SAAUD,GAC3B3B,EAAQ6B,KAAK,CACXvB,OAAQF,EAAa0B,aAwDEC,CAAUJ,KAExBA,QAMT,kBAAC,EAAD,CAAYpC,QAASoB,MC/F3BqB,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.facd30bd.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './PlanetCard.scss';\n\ntype Props = {\n  planet: Planet;\n};\n\nconst PlanetCard: React.FC<Props> = ({ planet }) => {\n  const [info, setInfo] = useState('');\n\n  const getDetailInfo = (currentPlanet: Planet) => {\n    setInfo(currentPlanet.description);\n  };\n\n  const removeDescription = () => {\n    setInfo('');\n  };\n\n  return (\n    <>\n      <div className=\"PlanetCard__list\">\n        <div className=\"PlanetCard__info\">\n          <div className=\"PlanetCard__description\">\n            <p className=\"PlanetCard__title\">\n              Name\n              {' '}\n            </p>\n            <p className=\"PlanetCard__value\">\n              {planet.name}\n            </p>\n          </div>\n\n          <div className=\"PlanetCard__description\">\n            <p className=\"PlanetCard__title\">\n              Id\n              {' '}\n            </p>\n            <p className=\"PlanetCard__value\">\n              {planet.id}\n            </p>\n          </div>\n\n          <div className=\"PlanetCard__description\">\n            <p className=\"PlanetCard__title\">\n              Radius\n              {' '}\n\n            </p>\n            <p className=\"PlanetCard__value\">\n              {planet.equatorialRadius.value}\n              {planet.equatorialRadius.unit}\n            </p>\n          </div>\n          <div className=\"PlanetCard__description\">\n            <p className=\"PlanetCard__title\">\n              Gravity\n              {' '}\n            </p>\n            <p className=\"PlanetCard__value\">\n              {planet.surfaceGravity.value}\n              {planet.surfaceGravity.unit}\n            </p>\n          </div>\n          <div className=\"PlanetCard__description\">\n            <p className=\"PlanetCard__title\">\n              Moons\n              {' '}\n            </p>\n            <p className=\"PlanetCard__value\">\n              {planet.moons?.count}\n            </p>\n          </div>\n        </div>\n\n        <div className=\" PlanetCard__button--container\">\n          <button\n            className=\" PlanetCard__button--info\"\n            type=\"button\"\n            onClick={() => getDetailInfo(planet)}\n          >\n            More info\n          </button>\n        </div>\n\n        {info && (\n          <div className=\"PlanetCard__details\">\n            <p className=\"PlanetCard__text\">{info}</p>\n            <div className=\" PlanetCard__button--container\">\n              <button\n                type=\"button\"\n                className=\" PlanetCard__button--info \"\n                onClick={removeDescription}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default PlanetCard;\n","import React from 'react';\nimport PlanetCard from '../PlanetCard/PlanetCard';\n\ntype Props = {\n  planets: Planet[];\n};\n\nconst PlanetList: React.FC<Props> = ({ planets }) => {\n  return (\n    <>\n      <div className=\"PlanetCard\">\n        {planets.map(planet => (\n          <div key={planet.id}>\n            <PlanetCard planet={planet} />\n          </div>\n\n        ))}\n\n      </div>\n\n    </>\n  );\n};\n\nexport default PlanetList;\n","import React from 'react';\nimport './Navigation.scss';\nimport { Link } from 'react-router-dom';\n\nconst Navigation = () => {\n  return (\n    <>\n      <div className=\"Navigation\">\n        <ul className=\"Navigation__list\">\n          <Link to=\"/home\" className=\"Navigation__item \">\n            <p className=\"Navigation__link\">Home</p>\n          </Link>\n          <Link to=\"/about\" className=\"Navigation__item\">\n            <p className=\"Navigation__link\">About us</p>\n          </Link>\n          <Link to=\"/contacts\" className=\"Navigation__item\">\n            <p className=\"Navigation__link\">Contacts us</p>\n          </Link>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport './Header.scss';\nimport Navigation from '../Navigation/Navigation';\n\nconst Header = () => {\n  return (\n    <>\n      <div className=\"Header\">\n        <p className=\"Header__logo\"> Logo</p>\n        <Navigation />\n        <div className=\"Header__join\">\n          <p>Join Us</p>\n        </div>\n\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n","import React, { useState, useMemo } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport planets from './api/data_for_test.json';\nimport PlanetList from './components/PlanetList/PlanetList';\nimport './App.scss';\nimport Header from './components/Header/Header';\n\nconst App = () => {\n  const [query, setQuery] = useState('');\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const sortBy = useMemo(() => searchParams.get('sortBy') || '', [searchParams]);\n  const sortOrder = useMemo(() => searchParams.get('sortOrder') || '', [searchParams]);\n\n  const SORT_OPTIONS = ['name', 'equatorialRadius', 'moons'];\n\n  const searchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const target = event.target.value;\n\n    setQuery(target);\n  };\n\n  const filteredPlanets = useMemo(() => planets.filter(planet => {\n    return (planet.name + planet.atmosphericConstituents.list + planet.id)\n      .toLowerCase().includes(query.trim().toLowerCase());\n  }), [query]);\n\n  const sortingBy = (sortField: string) => {\n    if (sortBy === sortField && sortOrder === 'asc') {\n      searchParams.set('sortOrder', 'desc');\n    } else {\n      searchParams.set('sortOrder', 'asc');\n    }\n\n    searchParams.set('sortBy', sortField);\n    history.push({\n      search: searchParams.toString(),\n    });\n  };\n\n  useMemo(() => {\n    switch (sortOrder) {\n      case 'asc':\n        switch (sortBy) {\n          case 'name':\n            filteredPlanets\n              .sort((a: Planet, b: Planet) => b.name.localeCompare(a.name));\n            break;\n\n          case 'equatorialRadius':\n            filteredPlanets\n              .sort((a: Planet, b: Planet) => b.equatorialRadius.value - a.equatorialRadius.value);\n            break;\n\n          case 'moons':\n            filteredPlanets\n              .sort((a: Planet, b: Planet) => b.moons.count - a.moons.count);\n            break;\n\n          default: filteredPlanets\n            .sort((a: Planet, b: Planet) => b.name.localeCompare(a.name));\n        }\n\n        break;\n      case 'desc':\n        filteredPlanets.reverse();\n        break;\n      default: filteredPlanets\n        .sort((a: Planet, b: Planet) => a.name.localeCompare(b.name));\n    }\n  }, [filteredPlanets, sortBy, sortOrder]);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"wrapper\">\n\n        <div className=\"input\">\n          <input\n            type=\"text-area\"\n            className=\"input__value\"\n            placeholder=\"what you search\"\n            onChange={searchQuery}\n          />\n        </div>\n\n        <div className=\"sort__buttons\">\n          {SORT_OPTIONS.map(sortField => (\n            <button\n              key={sortField}\n              type=\"button\"\n              className=\"sort__buttons--item\"\n              onClick={() => sortingBy(sortField)}\n            >\n              {sortField}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      <PlanetList planets={filteredPlanets} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}